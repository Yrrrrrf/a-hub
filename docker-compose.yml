# Define common environment variables using YAML anchors
x-common-env: &common-env
  DB_NAME: ${DB_NAME:-a_hub}
  DB_OWNER_ADMIN: ${DB_OWNER_ADMIN:-a_hub_admin}
  DB_OWNER_PWORD: ${DB_OWNER_PWORD:-password}

services:
  db:
    build:
      context: ./server/db/
      dockerfile: db.Dockerfile
    container_name: a-hub-db
    environment:
      <<: *common-env # Include all common variables
      # PostgreSQL-specific variables (often map to common ones)
      POSTGRES_DB: ${DB_NAME:-a_hub}
      POSTGRES_USER: ${DB_OWNER_ADMIN:-a_hub_admin}
      POSTGRES_PASSWORD: ${DB_OWNER_PWORD:-password}
      # Variables for the init script (already in your original, good to keep)
      # DB_NAME: ${DB_NAME:-a_hub} # Covered by anchor and POSTGRES_DB
      # DB_OWNER_ADMIN: ${DB_OWNER_ADMIN:-a_hub_admin} # Covered by anchor and POSTGRES_USER
      # DB_OWNER_PWORD: ${DB_OWNER_PWORD:-password} # Covered by anchor and POSTGRES_PASSWORD
      TZ: UTC
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data # Explicit path for data
    networks:
      - a-hub-network # Changed from 'network' to 'a-hub-network'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${DB_OWNER_ADMIN:-a_hub_admin} -d $${DB_NAME:-a_hub}"] # Use $${VAR} for shell commands in healthcheck
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s # Give DB time to initialize

  api:
    build:
      context: ./server/api/
      dockerfile: api.Dockerfile
    container_name: a-hub-api
    environment:
      <<: *common-env # Include all common variables
      DB_HOST: db # Service name for the database
      # PYTHONDONTWRITEBYTECODE: 1 # Already in your api.Dockerfile
      # PYTHONUNBUFFERED: 1 # Already in your api.Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./server/api:/app # For hot-reloading code changes
    depends_on:
      db:
        condition: service_healthy # Wait for DB to be healthy and all init scripts to complete
    networks:
      - a-hub-network # Changed from 'network' to 'a-hub-network'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 10s    # More frequent checks
      timeout: 5s
      retries: 5       # More retries
      start_period: 10s # Give API time to start after DB is healthy

  # core: # Kept commented out as per your instruction
  #   build:
  #     context: ./core
  #     dockerfile: hub.Dockerfile
  #   container_name: a-hub-core
  #   environment:
  #     - VITE_API_URL=http://api:8000
  #   ports:
  #     - "5173:5173"
  #   volumes:
  #     - ./core:/app
  #     - /app/node_modules
  #   depends_on:
  #     api:
  #       condition: service_healthy
  #   networks:
  #     - a-hub-network # Changed from 'network' to 'a-hub-network'

networks:
  a-hub-network: # Ensuring the network name matches what services expect
    name: a-hub-network # Explicit network name
    driver: bridge

volumes:
  postgres_data:
    name: a-hub-data # Explicit volume name